[{"C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\index.js":"1","C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\App.js":"2","C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\components\\modal esqueci senha\\modal.js":"3"},{"size":221,"mtime":1614174409247,"results":"4","hashOfConfig":"5"},{"size":3833,"mtime":1614194166701,"results":"6","hashOfConfig":"5"},{"size":1144,"mtime":1614181846182,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yy92wh",{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\index.js",[],"C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\App.js",["16","17","18","19"],"C:\\Users\\X568965\\Documents\\GitHub\\Replica-DSV-SMT\\src\\components\\modal esqueci senha\\modal.js",["20","21","22","23","24","25"],"import React, { useEffect, useImperativeHandle, useState, forwardRef, useCallback } from 'react'\r\nimport { createPortal } from 'react-dom'\r\nimport './index.css'\r\n\r\nconst modalElement = document.getElementById('modal-root')\r\n\r\nexport function Modal({ children, fade = false, defaultOpened = false, setIsOpen }, ref) {\r\n\r\n/* useImperativeHandle(ref, () => ({\r\n    open: () => setIsOpen(true),\r\n    close\r\n  }), [close])\r\n\r\n  const handleEscape = useCallback(event => {\r\n    if (event.keyCode === 27) close()\r\n  }, [close])\r\n\r\n  useEffect(() => {\r\n    if (isOpen) document.addEventListener('keydown', handleEscape, false)\r\n    return () => {\r\n      document.removeEventListener('keydown', handleEscape, false)\r\n    }\r\n  }, [handleEscape, isOpen])\r\n*/\r\n  return (\r\n      <div className={`modal ${fade ? '' : 'modal-fade'}`}>\r\n        <div className=\"modal-overlay\" onClick={() => setIsOpen(false)} />\r\n        <span role=\"button\" className=\"modal-close\" aria-label=\"close\" onClick={() => setIsOpen(false)}>\r\n          x\r\n        </span>\r\n        <div className=\"modal-body\">{children}</div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default forwardRef(Modal)",["26","27"],{"ruleId":"28","severity":1,"message":"29","line":4,"column":8,"nodeType":"30","messageId":"31","endLine":4,"endColumn":13},{"ruleId":"28","severity":1,"message":"32","line":10,"column":9,"nodeType":"30","messageId":"31","endLine":10,"endColumn":14},{"ruleId":"33","severity":1,"message":"34","line":30,"column":10,"nodeType":"35","endLine":30,"endColumn":52},{"ruleId":"36","severity":1,"message":"37","line":64,"column":23,"nodeType":"35","endLine":64,"endColumn":58},{"ruleId":"28","severity":1,"message":"38","line":1,"column":17,"nodeType":"30","messageId":"31","endLine":1,"endColumn":26},{"ruleId":"28","severity":1,"message":"39","line":1,"column":28,"nodeType":"30","messageId":"31","endLine":1,"endColumn":47},{"ruleId":"28","severity":1,"message":"40","line":1,"column":49,"nodeType":"30","messageId":"31","endLine":1,"endColumn":57},{"ruleId":"28","severity":1,"message":"41","line":1,"column":71,"nodeType":"30","messageId":"31","endLine":1,"endColumn":82},{"ruleId":"28","severity":1,"message":"42","line":2,"column":10,"nodeType":"30","messageId":"31","endLine":2,"endColumn":22},{"ruleId":"28","severity":1,"message":"43","line":5,"column":7,"nodeType":"30","messageId":"31","endLine":5,"endColumn":19},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},"no-unused-vars","'modal' is defined but never used.","Identifier","unusedVar","'modal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useImperativeHandle' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'createPortal' is defined but never used.","'modalElement' is assigned a value but never used.","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-global-assign","no-unsafe-negation"]