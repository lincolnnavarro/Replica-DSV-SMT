{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X568965\\\\Documents\\\\GitHub\\\\Replica-DSV-SMT\\\\src\\\\App2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport Modal from './component/modal esqueci senha/modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [dropdown, setDropdown] = useState(\"\");\n  const modalRef = useRef(null);\n\n  const toggleDropdown = () => {\n    console.log(\"show\"); //se clicar no botão, modal aparece\n\n    setDropdown(\"show\");\n    document.body.addEventListener(\"click\", closeDropdown);\n  };\n\n  const closeDropdown = event => {\n    event.stopPropagation(); //impede de executar listeners dos filhos\n\n    const contain = modalRef.current.contains(event.target);\n\n    if (!contain) {\n      //se clicar fora do modal, ele DESaparece\n      console.log(\"hidden\");\n      setDropdown(\"\");\n      document.body.removeEventListener(\"click\", closeDropdown);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDropdown,\n        children: \"Click Here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: dropdown,\n        modalRef: modalRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"l6eIi+EnD+zl0BCqdi6nTmRMd+s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/X568965/Documents/GitHub/Replica-DSV-SMT/src/App2.js"],"names":["React","useState","useRef","Modal","App","dropdown","setDropdown","modalRef","toggleDropdown","console","log","document","body","addEventListener","closeDropdown","event","stopPropagation","contain","current","contains","target","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,uCAAlB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMM,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMM,cAAc,GAAG,MAAM;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAD2B,CAE3B;;AACAJ,IAAAA,WAAW,CAAC,MAAD,CAAX;AACAK,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCC,aAAxC;AACD,GALD;;AAOA,QAAMA,aAAa,GAAGC,KAAK,IAAI;AAC7BA,IAAAA,KAAK,CAACC,eAAN,GAD6B,CACJ;;AACzB,UAAMC,OAAO,GAAGV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,KAAK,CAACK,MAAhC,CAAhB;;AACA,QAAI,CAACH,OAAL,EAAc;AAAE;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAJ,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAK,MAAAA,QAAQ,CAACC,IAAT,CAAcS,mBAAd,CAAkC,OAAlC,EAA2CP,aAA3C;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEN,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEH,QAAlB;AAA4B,QAAA,QAAQ,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMH,G;;KAAAA,G;AAgCN,eAAeA,GAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\nimport Modal from './component/modal esqueci senha/modal';\r\n\r\nconst App = () => {\r\n\r\n  const [dropdown, setDropdown] = useState(\"\"); \r\n  const modalRef = useRef(null);\r\n\r\n  const toggleDropdown = () => {\r\n    console.log(\"show\");\r\n    //se clicar no botão, modal aparece\r\n    setDropdown(\"show\");\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n  }\r\n\r\n  const closeDropdown = event => {\r\n    event.stopPropagation(); //impede de executar listeners dos filhos\r\n    const contain = modalRef.current.contains(event.target);\r\n    if (!contain) { //se clicar fora do modal, ele DESaparece\r\n      console.log(\"hidden\");\r\n      setDropdown(\"\");\r\n      document.body.removeEventListener(\"click\", closeDropdown);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button onClick={toggleDropdown}>Click Here!</button>\r\n        <Modal className={dropdown} modalRef={modalRef}/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}